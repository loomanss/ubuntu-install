# cat >> prometheus.yml << #eof
---
- name: Prometheus installation playbook
  hosts: localhost
  vars:
    port_prometheus: 9090 
    port_grafana: 3000 
    port_portainer: 9000
  tasks:

    - name: log in to dockerhub
      community.docker.docker_login:
        state: present
        registry_url: "https://index.docker.io/v1/" # dockerhub
        username: "{{ user }}"
        password: "{{ pass }}"

    - name: Pull prometheus image
      community.docker.docker_image:
       name: "prom/prometheus"
       source: pull
       state: present
   
    - name: Pull portainer image
      community.docker.docker_image:
       name: "portainer/portainer:stable"
       source: pull
       state: present
        
    - name: Pull grafana image
      community.docker.docker_image:
       name: "grafana/grafana:stable"
       source: pull
       state: present

       
    - name: Create prometheus container
      docker_container:
       name: prometheus
       image: prom/prometheus
       network_mode: host
       exposed_ports:
         - "{{ port_prometheus }}"
       state: started
       restart: yes
       
    - name: Allow port "{{ port_prometheus }}" for prometheus
      community.general.ufw:
          rule: allow
          port: "{{ port_prometheus }}"
          proto: tcp
       
    - name: Create portainer container
      docker_container:
       name: portainer
       image: portainer/portainer
       volumes:
          - /var/run/docker.sock:/var/run/docker.sock 
          - portainer_data:/data portainer/portainer-ce 
       network_mode: host
       exposed_ports:
         - "{{ port_portainer }}"
       state: started
       restart: yes
       
    - name: Allow port "{{ port_portainer }}" for portianer
      community.general.ufw:
        rule: allow
        port: "{{ port_portainer }}"
        proto: tcp
        
    - name: Create Grafana container
      docker_container:
       name: prometheus
       image: grafana/grafana
       network_mode: host
       exposed_ports:
         - "{{ port_grafana }}"
       state: started
       restart: yes
       env:
        GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource"
       
    - name: Allow port  "{{ port_grafana }}" for Grafana
      community.general.ufw:
          rule: allow
          port:  "{{ port_grafana }}"
          proto: tcp
#eof
